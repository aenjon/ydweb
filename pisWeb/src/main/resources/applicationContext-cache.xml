<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
				        http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-4.1.xsd 
	         			http://www.springframework.org/schema/cache
	         			http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">

	<!-- spring 缓存 -->
	<cache:annotation-driven cache-manager="cacheManager" />

	<!-- ehCache配置 -->
	<bean id="ehcacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache/ehcache.xml" />
	</bean>

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcacheManager" />
	</bean>

	<!-- redi缓存配置 -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
	</bean>

	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.hostName}" />
		<property name="port" value="${redis.port}" />
		<property name="database" value="${redis.dbIndex}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<bean id="cacheManager" class="net.yuan.nova.cache.spring.RedisCacheManager">
		<constructor-arg index="0" ref="redisTemplate" />
		<property name="usePrefix" value="true" />
		<property name="loadRemoteCachesOnStartup" value="true" />
		设置缓存时长，不设置则标识一直缓存
		<property name="expires">
			<map>
				<entry key="passwordRetryCache" value="3600" />
				<entry key="authorizationCache" value="3600" />
				<entry key="authenticationCache" value="3600" />
				<entry key="shiro-activeSessionCache" value="3600" />
				<entry key="sessionUserCache" value="3600" />
				<entry key="CacheHandle" value="1800" />
			</map>
		</property>
	</bean> -->

	<!-- BETTLE框架中封装的缓存管理器 -->
	<bean id="bettleCacheManager" class="net.yuan.nova.cache.SpringCacheManager">
		<property name="cacheManager" ref="cacheManager" />
	</bean>

</beans>
