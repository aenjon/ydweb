<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
				        http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-4.1.xsd 
				        http://www.springframework.org/schema/util 
				        http://www.springframework.org/schema/util/spring-util-4.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	         			http://www.springframework.org/schema/cache
	         			http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
				        http://www.springframework.org/schema/task
				        http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- 导入数据库配置 -->
	<context:property-placeholder location="file:#{T(net.yuan.nova.commons.ConfigurationMgr).getLocation()}" />

	<!--在 com.*（所有包）中扫描spring注解 -->
	<context:component-scan base-package="net.yuan.nova">
		<!-- 过滤掉@Controller的类 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 异步调用支持 -->
	<task:executor id="myExecutor" pool-size="5-50" queue-capacity="0" />
	<task:annotation-driven executor="myExecutor" />

	<!-- 通过注解控制事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>file:#{T(net.yuan.nova.commons.ConfigurationMgr).getLocation()}</value>
			</list>
		</property>
		<qualifier value="main" />
	</bean>

	<!-- 相当于调用SystemConstant.setProperties(properties) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="net.yuan.nova.commons.SystemConstant.setProperties" />
		<property name="arguments" ref="properties" />
	</bean>

	<!-- 数据库配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${oracle.url}" />
		<property name="username" value="${oracle.username}" />
		<property name="password" value="${oracle.password}" />
		<!-- 配置初始化大小、最小空闲、最大 -->
		<property name="maxActive" value="${oracle.maxPoolSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<!-- <property name="filters" value="stat" /> -->
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
			<!-- 自动匹配Mapper映射文件  -->
				<value>classpath*:net/yuan/nova/pis/mapping/*Mapper.xml</value>
			</list>
		</property>
		<property name="plugins">
		    <array>
		      <bean class="com.github.pagehelper.PageHelper">
		        <property name="properties">
		          <value>
		            dialect=oracle
		          </value>
		        </property>
		      </bean>
		    </array>
		  </property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 映射权限相关的dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="net.yuan.nova.pis.dao,net.yuan.nova.core.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean class="net.yuan.nova.commons.SpringUtils" />

	<import resource="applicationContext-cache.xml" />
	<import resource="applicationContext-shiro.xml" />

</beans>
