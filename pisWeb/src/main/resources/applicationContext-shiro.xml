<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
				        http://www.springframework.org/schema/context 
				        http://www.springframework.org/schema/context/spring-context-4.1.xsd 
				        http://www.springframework.org/schema/util 
				        http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<description>Apache Shiro安全配置</description>
	
    <!-- 缓存管理器，用来缓存用户认证信息和授权信息 -->
    <bean id="shiroCacheManager" class="net.yuan.nova.cache.shiro.ShiroCacheManager">
        <property name="cacheManager" ref="bettleCacheManager"/>
    </bean>
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="${password.algorithmName}"/>
        <property name="hashIterations" value="${password.hashIterations}"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- Realm实现 -->
	<bean id="adminRealm" class="net.yuan.nova.core.shiro.AdminAuthorizingRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="userService" ref="userService" />
		<property name="cachingEnabled" value="false"/>
	</bean>
	
	<!-- 系统公共用的的认证 -->
	<bean id="pubUserRealm" class="net.yuan.nova.core.shiro.PubUserAuthorizingRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="userService" ref="userService" />
		<property name="cachingEnabled" value="false"/>
	</bean>
	
	<bean id="autoCredentialsMatcher" class="net.yuan.nova.core.shiro.AutoCredentialsMatcher" />
	<!-- Oauth登录 -->
	<bean id="oauthRealm" class="net.yuan.nova.core.shiro.OauthAuthorizingRealm">
		<property name="credentialsMatcher" ref="autoCredentialsMatcher" />
		<property name="userService" ref="userService" />
		<property name="cachingEnabled" value="false"/>
	</bean>
	<bean id="autoRealm" class="net.yuan.nova.core.shiro.AutoAuthorizingRealm">
		<property name="credentialsMatcher" ref="autoCredentialsMatcher" />
		<property name="userService" ref="userService" />
		<property name="cachingEnabled" value="false"/>
	</bean>
	
	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
		<property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1200000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
	
	<!-- 使用Shiro原生的，本地Web会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 3,600,000 milliseconds = 1 hour -->
		<property name="globalSessionTimeout" value="1200000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>

	<!-- 安全管理器 -->
	<bean id="firstSuccess" class="org.apache.shiro.authc.pam.FirstSuccessfulStrategy" />
	<bean id="modelAuthricator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy" ref="firstSuccess" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="authenticator" ref="modelAuthricator" />
		<property name="realms">
			<list>
				<ref bean="adminRealm" />
				<ref bean="pubUserRealm" />
				<ref bean="oauthRealm" />
				<ref bean="autoRealm" />
			</list>
		</property>
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="net.yuan.nova.core.shiro.filter.AppFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login.html"/>
    </bean>
    
    <bean id="sysUserFilter" class="net.yuan.nova.core.shiro.filter.SysUserFilter"/>
    
	<!-- Shiro过滤器的配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.html" />
		<property name="successUrl" value="/index.html" />
		<property name="unauthorizedUrl" value="/401.html" />
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"></entry>
                <entry key="sysUser" value-ref="sysUserFilter"/>
            </map>
        </property>
		<property name="filterChainDefinitions">
			<value>
				/api/login** = anon
				/api/logout** = anon
				/login.html = authc
				/admin/** = authc,sysUser
				/api/user/** = authc,sysUser
				/api/** = anon,sysUser
				/** = anon
			</value>
		</property>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>
